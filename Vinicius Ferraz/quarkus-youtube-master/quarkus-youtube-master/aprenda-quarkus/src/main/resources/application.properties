# Configuration file
# key = value


# configurações do datasource. 
# Drivers que podem ser nativos: H2, mariaDB e postgres e desde versao 23 mysql. Existe client MongoDB
# Poderia estar no persistence.xml, mas a documentação oficial sugere que utilize este arquivo
quarkus.datasource.url = jdbc:postgresql://localhost:5432/postgres
quarkus.datasource.driver = org.postgresql.Driver
quarkus.datasource.username = postgres
quarkus.datasource.password = postgres

# Opções disponíveis: none (utilizado para produção, juntamente com a extensão Flyway), create, drop-and-create, drop, update
# executar ./mvnw quarkus:dev -Dquarkus.profile=dev

%dev.quarkus.hibernate-orm.database.generation= none
%dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql

%test.quarkus.hibernate-orm.database.generation = drop-and-create
%test.quarkus.hibernate-orm.sql-load-script = import-test.sql

%prod.quarkus.hibernate-orm.database.generation = none
%prod.quarkus.hibernate-orm.sql-load-script = no-file

#COMENTADO devivo ao bug com graylog: https://github.com/quarkusio/quarkus/issues/6434
#%dev.quarkus.flyway.migrate-at-start=false
#%dev.quarkus.flyway.baseline-on-migrate=true
#%dev.quarkus.flyway.baseline-version=0.0.0
#%dev.quarkus.flyway.baseline-description=Versão antes do flyway
#%dev.quarkus.flyway.schemas=public
#%dev.quarkus.flyway.table=flyway_schema_history
#%dev.quarkus.flyway.locations=db/prod/migration,db/dev/migration

quarkus.jaeger.service-name=aprenda-quarkus
#const(1 = rastreia todas as requisições, 0 = não rastreia ), probabilistic (0.2 = 20% das requisições são rastreadas)
#ratelimiting (2 = rastrea no maximo 2 transacoes por segundo), remote (configuração será feita em um agent)
quarkus.jaeger.sampler-type=const
#todas as requisicoes serão rastreadas
quarkus.jaeger.sampler-param=1
quarkus.jaeger.endpoint=http://localhost:14268/api/traces

#Configuração do client REST, utilizado no teste de tracing com Jaeger
com.github.viniciusfcf.jaeger.UnidadeFederativaService/mp-rest/url=http://localhost:8180/
com.github.viniciusfcf.jaeger.UnidadeFederativaService/mp-rest/scope=javax.inject.Singleton

quarkus.swagger-ui.always-include=true

#adicionar realm quarkus-realm.json ao keycloak

#ATE quarkus 0.23.2
#quarkus.keycloak.realm=quarkus
#quarkus.keycloak.auth-server-url=http://localhost:8180/auth
#quarkus.keycloak.resource=backend-service
#quarkus.keycloak.bearer-only=true
#quarkus.keycloak.credentials.secret=secret

#0.24.0 DESABILITANDO no video 18, pois colocamos a extensão JWT
quarkus.oidc.enabled=false
quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus
quarkus.oidc.client-id=backend-service

com.github.viniciusfcf.restclient.PetService/mp-rest/url=https://petstore.swagger.io/v2/
com.github.viniciusfcf.restclient.PetService/mp-rest/scope=javax.inject.Singleton

#COMENTADO NO VIDEO 16 o elaslticsearch
#quarkus.hibernate-search.elasticsearch.version=7
#quarkus.hibernate-search.elasticsearch.analysis.configurer=com.github.viniciusfcf.elasticsearch.CustomElasticsearchAnalysisConfigurer
#SEARCHABLE = ESPERA INDEXAR, BUSCÁVEL IMEDIATAMENTE
#COMMITED e QUEUED
#quarkus.hibernate-search.elasticsearch.automatic-indexing.synchronization.strategy=SEARCHABLE
#quarkus.hibernate-search.elasticsearch.index-defaults.lifecycle.strategy=drop-and-create
#quarkus.hibernate-search.elasticsearch.index-defaults.lifecycle.required-status=yellow

sistema.propriedade1=Sim P1
sistema.propriedade2=1

#JWT
#desabilitando por padrao no dev, desabilitamos OICD tambem
%dev.quarkus.smallrye-jwt.enabled=false
%dev.mp.jwt.verify.publickey.location=nao_utilizado
%dev.mp.jwt.verify.issuer=nao_utilizado

%test.mp.jwt.verify.issuer=https://github.com/viniciusfcf
%test.mp.jwt.verify.publickey.location=publicKey.pem

# GRAYLOG tem um bug em conjunto com FLYWAY: https://github.com/quarkusio/quarkus/issues/6434

quarkus.log.handler.gelf.enabled=true
quarkus.log.handler.gelf.host=localhost
quarkus.log.handler.gelf.port=12201
